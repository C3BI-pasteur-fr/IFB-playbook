---
- name: install ncbi-blast+ package (required by ecamber)
  apt: pkg=ncbi-blast+ state=installed
  tags: ecamber

- name: install muscle package (required by ecamber)
  apt: pkg=muscle state=installed
  tags: ecamber

- name: install python-dev
  apt: pkg=python-dev state=installed
  tags: biopython

- name: install library biopython
  command: pip install biopython==1.65
  tags: biopython

- name: Add R repository
  # On Ubuntu target: add R stable repository and install it.
  apt_repository: repo='deb http://cran.r-project.org/bin/linux/ubuntu trusty/' update_cache=yes 
  tags: R

- name: install R
  apt: pkg=r-base-core state=installed force=yes
  tags: R

- name: install tcsh
  apt: pkg=tcsh state=installed
  tags: tcsh

- name: install gcj
  apt: pkg=gcj-jdk state=installed
  tags: gcj

- name: apt-get clean
  command: apt-get -y clean
  tags: apt

- name: download prodigal
  get_url: url=https://github.com/hyattpd/Prodigal/archive/v2.6.3.tar.gz dest=/tmp/Prodigal-2.6.3.tar.gz
  tags: prodigal

- name: unarchive prodigal
  unarchive: src=/tmp/Prodigal-2.6.3.tar.gz dest=/usr/local/src copy=no
  tags: prodigal

- name: install prodigal
  command: make install chdir=/usr/local/src/Prodigal-2.6.3
  tags: prodigal

- name: make clean prodigal
  command: make clean chdir=/usr/local/src/Prodigal-2.6.3
  tags: prodigal

- name: download andi
  get_url: url=https://github.com/EvolBioInf/andi/releases/download/v0.9.4/andi-0.9.4.tar.gz dest=/tmp/andi-0.9.4.tar.gz
  tags: andi

- name: unarchive andi
  unarchive: src=/tmp/andi-0.9.4.tar.gz dest=/usr/local/src copy=no
  tags: andi

- name: configure andi
  command: ./configure --without-libdivsufsort chdir=/usr/local/src/andi-0.9.4
  tags: andi

- name: make andi
  command: make chdir=/usr/local/src/andi-0.9.4
  tags: andi

- name: make install andi
  command: make install chdir=/usr/local/src/andi-0.9.4
  tags: andi

- name: make clean andi
  command: make clean chdir=/usr/local/src/andi-0.9.4
  tags: andi

- name: download ecamber
  get_url: url=http://bioputer.mimuw.edu.pl/ecamber/software/ecamber_v1.08/ecamber_src.zip dest=/tmp/ecamber.zip
  tags: ecamber

- name: unarchive ecamber
  unarchive: src=/tmp/ecamber.zip dest=/usr/local/src copy=no
  tags: ecamber

- name: get muscle path
  shell: which muscle
  register: MUSCLE
  tags: ecamber

- name: get blast+/tblastn path
  shell: which tblastn
  register: TBLASTN
  tags: ecamber

- name: configure ecamber
  template: src=templates/ecamber_config_aln_paths.j2 dest=/usr/local/src/ecamber/config/config_aln_paths.txt
  tags: ecamber

- name: get blast+/blastn path
  shell: which blastn
  register: BLASTN
  tags: ecamber

- name: get blast+/blastp path
  shell: which blastp
  register: BLASTP
  tags: ecamber

- name: get blast+/makeblastdb path
  shell: which makeblastdb
  register: MAKEBLASTDB
  tags: ecamber

- name: get prodigal path
  shell: which prodigal
  register: PRODIGAL
  tags: ecamber

- name: configure ecamber 2nd step
  template: src=templates/ecamber_config_extpaths.j2 dest=/usr/local/src/ecamber/config/config_extpaths.txt
  tags: ecamber

- name: configure ecamber 3rd step
  copy: src=files/config_resources.txt dest=/usr/local/src/ecamber/config/config_resources.txt
  tags: ecamber

- name: correction of ecamber python script
  replace:
    dest=/usr/local/src/ecamber/src/soft/utils/camber_format_utils.py
    regexp='left_bound, right_bound = tokens\[1\]\.strip\("complement\("\)\.split\("\.\."\)'
    replace='left_bound, right_bound = tokens[1].strip("complement(").strip(")").split("..")'
  tags: ecamber

- name: create directory opscan for shared data
  file: path=/usr/local/share/opscan state=directory
  tags: opscan

- name: copy opscan binary
  copy: src=files/opscan dest=/usr/local/bin/ mode=0755
  tags: opscan

- name: copy opscan matrix
  copy: src=files/BLOSUM60 dest=/usr/local/share/opscan/
  tags: opscan

- name: download coregenebuilder source and data files
  get_url: url=https://github.com/C3BI-pasteur-fr/CoreGeneBuilder/archive/v1.0.tar.gz dest=/tmp/coregenebuilder.tar.gz
  tags: coregenebuilder

- name: unarchive coregenebuilder
  unarchive: src=/tmp/coregenebuilder.tar.gz dest=/usr/local/src copy=no
  tags: coregenebuilder

- name: checking if the directory coregenebuilder exists
  stat: path=/usr/local/src/CoreGeneBuilder-1.0
  register: stat_result
  tags: coregenebuilder

- name: rename directory coregenebuilder if exists
  command: mv /usr/local/src/CoreGeneBuilder-1.0 /usr/local/src/coregenebuilder
  when: stat_result.stat.isdir is defined and stat_result.stat.isdir  
  tags: coregenebuilder

- name: compile fasta2agp
  command: gcj -O3 --main=FASTA2AGP FASTA2AGP.java -o fasta2agp chdir=/usr/local/src/coregenebuilder/src
  tags: fasta2agp

- name: move fasta2agp binary file 
  shell: mv /usr/local/src/coregenebuilder/src/fasta2agp /usr/local/bin
  tags: fasta2agp

- name: remove fasta2agp directory if exists
  file: path=/usr/local/src/coregenebuilder/src/FASTA2AGP state=absent
  tags: fasta2agp

- name: create coregenebuilder etc directory
  file: path=/etc/coregenebuilder state=directory
  tags: coregenebuilder

- name: remove share/coregenebuilder dir if exists
  file: path=/usr/local/share/coregenebuilder state=absent
  tags: coregenebuilder

- name: create coregenebuilder share directory
  file: path=/usr/local/share/coregenebuilder state=directory
  tags: coregenebuilder

- name: configure coregenebuilder - step 1
  shell: mv /usr/local/src/coregenebuilder/src/* /usr/local/bin
  tags: coregenebuilder

- name: move fasta2agp src file
  shell: mv /usr/local/bin/FASTA2AGP.java /usr/local/src/coregenebuilder/src
  tags: coregenebuilder

- name: configure coregenebuilder - step 2
  shell: mv /usr/local/src/coregenebuilder/config/* /etc/coregenebuilder
  tags: coregenebuilder

- name: configure coregenebuilder - step 3
  shell: mv /usr/local/src/coregenebuilder/doc /usr/local/share/coregenebuilder
  tags: coregenebuilder

- name: configure coregenebuilder - step 4
  shell: mv /usr/local/src/coregenebuilder/data /usr/local/share/coregenebuilder
  tags: coregenebuilder

- name: configure coregenebuilder - step 5
  copy: src=files/config_env.txt dest=/etc/coregenebuilder
  tags: coregenebuilder

- name: configure coregenebuilder - step 6
  lineinfile: dest=/usr/local/bin/coregenebuilder regexp='^CGB_CONFIG=.*' line='CGB_CONFIG={{ CGB_CONFIG_PATH }}'
  tags: coregenebuilder

- name: configure coregenebuilder - step 7
  shell: mv /usr/local/src/coregenebuilder/README.md /root
  tags: coregenebuilder


- name: remove all archives from /tmp
  file: path=/tmp/{{ item }} state=absent
  with_items:
     - andi-0.9.4.tar.gz
     - coregenebuilder.tar.gz
     - ecamber.zip 
     - libdivsufsort-2.0.2-1.tar.gz
     - Prodigal-2.6.3.tar.gz
  tags: clean 

- name: remove directories from /usr/local/src
  file: path=/usr/local/src/{{ item }} state=absent
  with_items:
     - andi-0.9.4
     - coregenebuilder
     - libdivsufsort-2.0.2-1
     - Prodigal-2.6.3
  tags: clean 

- name: set motd 
  copy: src=files/motd dest=/etc mode=664
  tags: motd
  
